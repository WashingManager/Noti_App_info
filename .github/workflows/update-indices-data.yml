name: 인덱스 데이터 업데이트

on:
  schedule:
    - cron: '*/10 * * * *' # 매 10분마다 (UTC)
  workflow_dispatch: # 수동 실행 가능

permissions:
  contents: write # 저장소 쓰기 권한

concurrency:
  group: update-data # 동시 실행 방지 그룹
  cancel-in-progress: false # 진행 중인 작업 취소 안 함

jobs:
  update:
    runs-on: ubuntu-latest # 최신 우분투 환경에서 실행
    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3
        with:
          ref: main # main 브랜치 사용
          fetch-depth: 0  # 전체 Git 히스토리 가져오기

      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Node.js 18 버전 사용

      - name: 의존성 설치
        run: npm install # package.json에 정의된 의존성 설치

      - name: Puppeteer 설치
        run: npm install puppeteer # Puppeteer 별도 설치

      - name: 업데이트 스크립트 실행
        run: node update-indices-data.js # 데이터 업데이트 스크립트 실행

      - name: 변경사항 커밋 및 푸시
        run: |
          # Git 사용자 설정
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          
          # 변경사항 스테이징
          git add indices-data.json
          
          # 커밋할 변경사항이 있는지 확인
          if ! git diff --staged --quiet; then
            # staged 되지 않은 변경사항 스태시
            git stash push -u
            
            # 스테이징된 변경사항 커밋
            git commit -m "Update indices-data.json"
            
            # 리베이스와 함께 풀
            git pull origin main --rebase
            
            # 스태시된 변경사항 적용 (실패해도 무시)
            git stash pop || true
            
            # 메인 브랜치로 푸시
            git push origin main
          else
            echo "커밋할 변경사항이 없습니다"
          fi
